import { useRouter } from 'next/router';
import React, { useEffect } from 'react';
import Head from 'next/head';
import { trpc } from '../../utils/trpc';


const SnippetPage = () => {
  const router = useRouter();
  const id = router.query.id as string;

  const [snippetText, setSnippetText] = React.useState("");
  const [isDisabled, setIsDisabled] = React.useState(true);

  const oneSnippet = trpc.snippet.getOneSnippet.useQuery({ id });
  const updateSnippet = trpc.snippet.updateSnippet.useMutation({
    onSuccess: () => {
      console.log("Update Successful")
    },
    onError: () => {
      console.log("Update Failed")
    }
  });
  const deleteSnippet = trpc.snippet.deleteSnippet.useMutation({
    onSuccess: () => {
      router.push('/');
    },
    onError: () => {
      console.log('Error deleting snippet');
    }
  });

  useEffect(() => {
    setSnippetText(oneSnippet.data?.text || "");
  }, [oneSnippet.data?.text]);

  const handleUpdate = () => {
    updateSnippet.mutateAsync({
      id,
      text: snippetText,
    });
    setIsDisabled(true);
  }

  const handleDelete = () => {
    deleteSnippet.mutateAsync({ id });
  }

  const handleCopy = () => {
    if (!oneSnippet.data) return;
    navigator.clipboard.writeText(oneSnippet.data?.text);
  }

  return (
    <>
      <Head>
        <title>Snippet</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto flex min-h-screen flex-col items-center justify-center p-3">
        <h1 className="mb-4 text-4xl font-bold">Snippet {id} </h1>
        <textarea
          className="border shadow-md rounded m-3 p-2 w-1/3 h-48"
          value={snippetText}
          disabled = {isDisabled ? true : false}
          onChange={(e) => setSnippetText(e.target.value)}
        />
        <button className="mb-5"onClick={handleCopy}>COPYY!!!</button>
        { isDisabled ? 
            <button onClick={() => setIsDisabled(!isDisabled)}>Edit</button> : (<button onClick={handleUpdate}>Save</button>)
        }
        <button
          onClick={handleDelete}
        > Delete </button>
        <button onClick={() => router.back()}>
          Home
        </button>
      </main>

    </>
  );
}

export default SnippetPage;